name: Deploy to EC2

on:
  push:
    branches:
      - aws-s3

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PEM file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Create .env file
        env:
          AWS_S3_OBJECT_NAME: ${{ secrets.AWS_S3_OBJECT_NAME }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        run: |
          echo "AWS_S3_OBJECT_NAME=${AWS_S3_OBJECT_NAME}" > .env
          echo "AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}" >> .env
          echo "AWS_SECRET_KEY=${AWS_SECRET_KEY}" >> .env
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> .env
          echo "MLFLOW_TRACKING_URI=https://dagshub.com/ronair212/mlops-model-dev.mlflow" >> .env
          echo "MLFLOW_TRACKING_USERNAME=ronair212" >> .env
          echo "MLFLOW_TRACKING_PASSWORD=mlopskhoury" >> .env
          echo "PYTHONPATH=\$PYTHONPATH:/home/ubuntu/mlops-model-dev/src/" >> .env
          cat .env

      - name: Copy .env file to EC2
        env:
          EC2_USER: ubuntu
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          scp -i ec2_key.pem -o StrictHostKeyChecking=no .env $EC2_USER@$EC2_HOST:/home/ubuntu/.env

      - name: Deploy on EC2
        env:
          EC2_USER: ubuntu
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
            #!/bin/bash
            sudo su

            # Install Miniconda
            echo "Installing Miniconda..."
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            bash miniconda.sh -b -p /opt/miniconda
            rm miniconda.sh
            export PATH=/opt/miniconda/bin:\$PATH
            conda init
            source /root/.bashrc
            echo "Miniconda installation completed."

            # Clone the repository
            cd /home/ubuntu
            rm -rf /home/ubuntu/mlops-model-dev
            echo "Cloning the mlops-model-dev repository..."
            git clone https://github.com/ronair212/mlops-model-dev.git
            echo "Repository cloned successfully."

            # Navigate into the repository directory
            cd /home/ubuntu/mlops-model-dev
            echo "Navigated into the mlops-model-dev directory."

            # Create and activate Conda environment
            echo "Creating and activating Conda environment..."
            conda create -n fraud_env python=3.8 -y
            source activate fraud_env
            echo "Conda environment 'fraud_env' created and activated."

            # Install Python dependencies in Conda environment
            echo "Installing Python dependencies..."
            pip install -r requirements.txt
            echo "Python dependencies installed."

            # Explicitly install 'ensure' package
            echo "Installing 'ensure' package..."
            pip install ensure
            echo "'ensure' package installed."

            # Verify 'ensure' package installation
            echo "Verifying 'ensure' package installation..."
            python -c "import ensure; print('ensure installed successfully')"
            echo "'ensure' package verified."

            # Export environment variables
            echo "Exporting environment variables..."
            export $(cat /home/ubuntu/.env | xargs)
            echo "Environment variables exported."

            # Run your Python script
            echo "Running main.py..."
            PYTHONPATH=\$PYTHONPATH:/home/ubuntu/mlops-model-dev/src python main.py
            echo "Python script executed successfully."
          EOF
